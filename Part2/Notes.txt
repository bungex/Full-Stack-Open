- concat method does not change the component's original state, but instead creates a new copy of the list.
- Never mutate state direcly
    - first make a copy then change the state
- Shallow copy vs Deep copy
    - Shallow copy is when an object address is shared by two or more vairable
        - ex:
            const var1 = ['dog', 'cat', 'monkey']
            const var2 = var1 
            var2.push('lion')
        - when we make change to var2 it will change the original array 


- Some Sytanx
    - ex:
    const name = 'Leevi'
    const age = 12
    const person = {
        name: name,
        age: age
    } 
    is the same as,
    const person = { name, age }


- Fetch data from json server:
    - use axios library 
        -npm install axios
        -npm install json-server --save-dev
    - Make sure the json server is running
    - to connect to external machines, implement useEffect hook
        ex: useEffect(() => {
                axios
                .get('url here')
                .then(response => {
                    console.log('response.data')
                })
            }, [])
- POST 
    - ex:
        axios
        .post('URL', Object)
        .then(response => {
            console.log(response)
        })

- PUT
    - to catch errors, or error handler for rejected promises is defined like this:
        ex: axios
            .get('URL_Fail')
            .then(response => {
                console.log('success!')
            })
            .catch(error => {
                console.log('fail')
            })
        The catch method is to be used at the end of promise chain, if any promise were to throw error the catch block will be called


- REST
    - REST refer to individual data objects as resources
    - you can locate individual with corresponding id
        - ex: URL notes/3, 3 refers to id and URL refers to all contents
    - To Store a resource is done by making HTTP POST req
        - data is sent in the 'body' of the req  
        - ex of post req 
              axios
                .post('URL', Object)
                .then(response => {
                console.log(response)
                })